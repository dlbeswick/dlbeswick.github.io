export class Point2 {
    constructor(x = 0, y = 0) {
        this.x = x;
        this.y = y;
    }
    set(x, y) { this.x = x; this.y = y; }
    plusEq(p) { this.x += p.x; this.y += p.y; }
    minusEq(p) { this.x -= p.x; this.y -= p.y; }
    sPlusEq(p) { this.x += p; this.y += p; }
    ;
    sMinusEq(p) { this.x -= p; this.y -= p; }
    sDivEq(p) { this.x /= p; this.y /= p; }
    ;
    sMulEq(p) { this.x *= p; this.y *= p; }
    equals(p) { return this.x == p.x && this.y == p.y; }
    lessThan(p) { return this.x < p.x && this.y < p.y; }
    sMul(p) { return new Point2(this.x * p, this.y * p); }
    sDiv(p) { return new Point2(this.x / p, this.y / p); }
    sPlus(p) { return new Point2(this.x + p, this.y + p); }
    sMinus(p) { return new Point2(this.x - p, this.y - p); }
    mul(p) { return new Point2(this.x * p.x, this.y * p.y); }
    div(p) { return new Point2(this.x / p.x, this.y / p.y); }
    plus(p) { return new Point2(this.x + p.x, this.y + p.y); }
    minus(p) { return new Point2(this.x - p.x, this.y - p.y); }
    dot(p) { return this.x * p.x + this.y * p.y; }
    get length() { return Math.sqrt(this.x * this.x + this.y * this.y); }
    normalise() {
        this.sDivEq(this.length);
    }
    get normalised() {
        return this.sDiv(this.length);
    }
    rotated(rads) {
        return new Point2(this.x * Math.cos(rads) - this.y * Math.sin(rads), this.x * Math.sin(rads) + this.y * Math.cos(rads));
    }
    vecRotated(directionVector) {
        return new Point2(this.x * directionVector.y - this.y * directionVector.x, this.x * directionVector.x + this.y * directionVector.y);
    }
    get copy() {
        return new Point2(this.x, this.y);
    }
}
export function Point(x, y) { return new Point2(x, y); }
export function Pointi(x, y) { return new Point2(Math.floor(x), Math.floor(y)); }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9pbnQyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMvcG9pbnQyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxNQUFNO0lBSWpCLFlBQVksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQztRQUN0QixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUNWLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQ1osQ0FBQztJQUVGLEdBQUcsQ0FBQyxDQUFTLEVBQUUsQ0FBUyxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sQ0FBQyxDQUFPLElBQUksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqRCxPQUFPLENBQUMsQ0FBTyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEQsT0FBTyxDQUFDLENBQVMsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUFBLENBQUM7SUFDakQsUUFBUSxDQUFDLENBQVMsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqRCxNQUFNLENBQUMsQ0FBUyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUNoRCxNQUFNLENBQUMsQ0FBUyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sQ0FBQyxDQUFPLElBQUksT0FBTyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQztJQUN6RCxRQUFRLENBQUMsQ0FBTyxJQUFJLE9BQU8sSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUM7SUFDekQsSUFBSSxDQUFDLENBQVMsSUFBSSxPQUFPLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBQzdELElBQUksQ0FBQyxDQUFTLElBQUksT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQztJQUM3RCxLQUFLLENBQUMsQ0FBUyxJQUFJLE9BQU8sSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLENBQVMsSUFBSSxPQUFPLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBQy9ELEdBQUcsQ0FBQyxDQUFPLElBQUksT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBQzlELEdBQUcsQ0FBQyxDQUFPLElBQUksT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBQzlELElBQUksQ0FBQyxDQUFPLElBQUksT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBQy9ELEtBQUssQ0FBQyxDQUFPLElBQUksT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBRWhFLEdBQUcsQ0FBQyxDQUFPLElBQUksT0FBTyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVwRCxJQUFJLE1BQU0sS0FBSyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVyRSxTQUFTO1FBQ1IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDekIsQ0FBQztJQUVELElBQUksVUFBVTtRQUNiLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDOUIsQ0FBQztJQUVBLE9BQU8sQ0FBQyxJQUFZO1FBQ3BCLE9BQU8sSUFBSSxNQUFNLENBQ2IsSUFBSSxDQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFDL0MsSUFBSSxDQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FDNUMsQ0FBQTtJQUNILENBQUM7SUFFRCxVQUFVLENBQUMsZUFBdUI7UUFDbEMsT0FBTyxJQUFJLE1BQU0sQ0FDYixJQUFJLENBQUMsQ0FBQyxHQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBQyxlQUFlLENBQUMsQ0FBQyxFQUNyRCxJQUFJLENBQUMsQ0FBQyxHQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBQyxlQUFlLENBQUMsQ0FBQyxDQUNsRCxDQUFBO0lBQ0gsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDbkMsQ0FBQztDQUNGO0FBRUQsTUFBTSxVQUFVLEtBQUssQ0FBQyxDQUFTLEVBQUUsQ0FBUyxJQUFJLE9BQU8sSUFBSSxNQUFNLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUN0RSxNQUFNLFVBQVUsTUFBTSxDQUFDLENBQVMsRUFBRSxDQUFTLElBQUksT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUG9pbnQyIHtcblx0eDogbnVtYmVyXG4gIHk6IG51bWJlciBcblxuICBjb25zdHJ1Y3Rvcih4ID0gMCwgeSA9IDApIHtcbiAgICB0aGlzLnggPSB4XG4gICAgdGhpcy55ID0geVxuICB9XG5cblx0c2V0KHg6IG51bWJlciwgeTogbnVtYmVyKSB7IHRoaXMueCA9IHg7IHRoaXMueSA9IHk7IH1cblx0cGx1c0VxKHA6IHRoaXMpIHsgdGhpcy54ICs9IHAueDsgdGhpcy55ICs9IHAueTsgfVxuXHRtaW51c0VxKHA6IHRoaXMpIHsgdGhpcy54IC09IHAueDsgdGhpcy55IC09IHAueTsgfVxuXHRzUGx1c0VxKHA6IG51bWJlcikgeyB0aGlzLnggKz0gcDsgdGhpcy55ICs9IHA7IH07XG5cdHNNaW51c0VxKHA6IG51bWJlcikgeyB0aGlzLnggLT0gcDsgdGhpcy55IC09IHA7IH1cblx0c0RpdkVxKHA6IG51bWJlcikgeyB0aGlzLnggLz0gcDsgdGhpcy55IC89IHA7IH07XG5cdHNNdWxFcShwOiBudW1iZXIpIHsgdGhpcy54ICo9IHA7IHRoaXMueSAqPSBwOyB9XG5cdGVxdWFscyhwOiB0aGlzKSB7IHJldHVybiB0aGlzLnggPT0gcC54ICYmIHRoaXMueSA9PSBwLnkgfVxuXHRsZXNzVGhhbihwOiB0aGlzKSB7IHJldHVybiB0aGlzLnggPCBwLnggJiYgdGhpcy55IDwgcC55IH1cblx0c011bChwOiBudW1iZXIpIHsgcmV0dXJuIG5ldyBQb2ludDIodGhpcy54ICogcCwgdGhpcy55ICogcCkgfVxuXHRzRGl2KHA6IG51bWJlcikgeyByZXR1cm4gbmV3IFBvaW50Mih0aGlzLnggLyBwLCB0aGlzLnkgLyBwKSB9XG5cdHNQbHVzKHA6IG51bWJlcikgeyByZXR1cm4gbmV3IFBvaW50Mih0aGlzLnggKyBwLCB0aGlzLnkgKyBwKSB9XG5cdHNNaW51cyhwOiBudW1iZXIpIHsgcmV0dXJuIG5ldyBQb2ludDIodGhpcy54IC0gcCwgdGhpcy55IC0gcCkgfVxuXHRtdWwocDogdGhpcykgeyByZXR1cm4gbmV3IFBvaW50Mih0aGlzLnggKiBwLngsIHRoaXMueSAqIHAueSkgfVxuXHRkaXYocDogdGhpcykgeyByZXR1cm4gbmV3IFBvaW50Mih0aGlzLnggLyBwLngsIHRoaXMueSAvIHAueSkgfVxuXHRwbHVzKHA6IHRoaXMpIHsgcmV0dXJuIG5ldyBQb2ludDIodGhpcy54ICsgcC54LCB0aGlzLnkgKyBwLnkpIH1cblx0bWludXMocDogdGhpcykgeyByZXR1cm4gbmV3IFBvaW50Mih0aGlzLnggLSBwLngsIHRoaXMueSAtIHAueSkgfVxuXG5cdGRvdChwOiB0aGlzKSB7IHJldHVybiB0aGlzLnggKiBwLnggKyB0aGlzLnkgKiBwLnk7IH1cblxuXHRnZXQgbGVuZ3RoKCkgeyByZXR1cm4gTWF0aC5zcXJ0KHRoaXMueCAqIHRoaXMueCArIHRoaXMueSAqIHRoaXMueSk7IH1cblx0XG5cdG5vcm1hbGlzZSgpIHsgXG5cdFx0dGhpcy5zRGl2RXEodGhpcy5sZW5ndGgpXG5cdH1cblxuXHRnZXQgbm9ybWFsaXNlZCgpIHsgXG5cdFx0cmV0dXJuIHRoaXMuc0Rpdih0aGlzLmxlbmd0aClcblx0fVxuICBcbiAgcm90YXRlZChyYWRzOiBudW1iZXIpIHtcblx0XHRyZXR1cm4gbmV3IFBvaW50MihcbiAgICAgIHRoaXMueCpNYXRoLmNvcyhyYWRzKSAtIHRoaXMueSpNYXRoLnNpbihyYWRzKSxcblx0XHQgIHRoaXMueCpNYXRoLnNpbihyYWRzKSArIHRoaXMueSpNYXRoLmNvcyhyYWRzKVxuICAgIClcbiAgfVxuXG4gIHZlY1JvdGF0ZWQoZGlyZWN0aW9uVmVjdG9yOiBQb2ludDIpIHtcblx0XHRyZXR1cm4gbmV3IFBvaW50MihcbiAgICAgIHRoaXMueCpkaXJlY3Rpb25WZWN0b3IueSAtIHRoaXMueSpkaXJlY3Rpb25WZWN0b3IueCxcblx0XHQgIHRoaXMueCpkaXJlY3Rpb25WZWN0b3IueCArIHRoaXMueSpkaXJlY3Rpb25WZWN0b3IueVxuICAgIClcbiAgfVxuXG4gIGdldCBjb3B5KCkge1xuICAgIHJldHVybiBuZXcgUG9pbnQyKHRoaXMueCwgdGhpcy55KVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBQb2ludCh4OiBudW1iZXIsIHk6IG51bWJlcikgeyByZXR1cm4gbmV3IFBvaW50Mih4LHkpIH1cbmV4cG9ydCBmdW5jdGlvbiBQb2ludGkoeDogbnVtYmVyLCB5OiBudW1iZXIpIHsgcmV0dXJuIG5ldyBQb2ludDIoTWF0aC5mbG9vcih4KSxNYXRoLmZsb29yKHkpKSB9XG4iXX0=