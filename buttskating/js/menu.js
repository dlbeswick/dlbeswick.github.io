import { assert } from './assert.js';
import { EFonts } from './font.js';
import { g_App, STATE } from "./app.js";
export class Menu {
    constructor() {
        this.m_menus = new Array();
        this.m_curMenu = "";
        this.m_curItem = "";
        this.m_select = 0;
    }
    countOf(menu) {
        return this.m_menus.filter(([m, i]) => m == menu).length;
    }
    update() {
        assert(this.m_curMenu != "");
        if (g_App.m_transition.isBusy())
            return;
        const c = g_App.m_input.bufferKey();
        if (c == "Enter") {
            this.handleSelect(this.m_curMenu, this.m_curItem);
        }
        else if (c == "ArrowUp") {
            if (this.m_select > 0) {
                this.m_select--;
                g_App.getSound().PlayWAV("MENU01");
            }
        }
        else if (c == "ArrowDown") {
            if (this.m_select < this.countOf(this.m_curMenu) - 1) {
                this.m_select++;
                g_App.getSound().PlayWAV("MENU01");
            }
        }
    }
    draw() {
        assert(this.m_curMenu != "");
        let itemNum = 0;
        const fontWidth = g_App.fonts.getWidth(EFonts.FONT_SYSTEM);
        const fontHeight = g_App.fonts.getHeight(EFonts.FONT_SYSTEM);
        const num = this.countOf(this.m_curMenu);
        let x = (g_App.canvas.width - (fontWidth * this.m_curMenu.length)) / 2;
        let y = 10;
        g_App.fonts.write(this.m_curMenu, x, y, EFonts.FONT_SYSTEM);
        y = (g_App.canvas.height - (fontHeight * num)) / 2;
        for (const [m, i] of this.m_menus.filter(([m, i]) => m == this.m_curMenu)) {
            x = (g_App.canvas.width - (fontWidth * i.length)) / 2;
            if (itemNum == this.m_select) {
                g_App.fonts.wobbly(i, x, y, EFonts.FONT_SYSTEM);
                this.m_curItem = i;
            }
            else {
                g_App.fonts.write(i, x, y, EFonts.FONT_SYSTEM);
            }
            y += fontHeight;
            itemNum++;
        }
    }
    addItem(menu, item) {
        this.m_menus.push([menu, item]);
    }
    changeItem(menu, item, newItem) {
        const m = this.m_menus.find(i => i[0] == menu && i[1] == item);
        assert(m);
        m[1] = newItem;
    }
    setMenu(menu) {
        const m = this.m_menus.find(i => i[0] == menu);
        assert(m);
        this.m_curMenu = menu;
        this.m_select = 0;
    }
    handleSelect(menu, item) {
        if (menu == "Main Menu") {
            if (item == "Start") {
                g_App.m_transition.goTransition(g_App.m_transition.BMPFADE, STATE.GAME, g_App.m_map.loadBinary("media/level1.map", true));
                g_App.getSound().PlayWAV("MISC02");
            }
            else if (item == "Options") {
                this.setMenu("Options");
                g_App.getSound().PlayWAV("MENU02");
            }
            else if (item == "Quit") {
                g_App.m_transition.goTransition(g_App.m_transition.SPIRALBLOCKS, STATE.QUIT, Promise.resolve());
                g_App.getSound().PlayWAV("MISC01");
            }
        }
        else if (menu == "Options") {
            if (item == "Skill : Easy") {
                this.changeItem("Options", "Skill : Easy", "Skill : Normal");
                g_App.getSound().PlayWAV("MISC03");
            }
            else if (item == "Skill : Normal") {
                this.changeItem("Options", "Skill : Normal", "Skill : Hard");
                g_App.getSound().PlayWAV("MISC03");
            }
            else if (item == "Skill : Hard") {
                this.changeItem("Options", "Skill : Hard", "Skill : Easy");
                g_App.getSound().PlayWAV("MISC03");
            }
            else if (item == "FX is on") {
                this.changeItem("Options", "FX is on", "FX is off");
                g_App.getSound().PlayWAV("MISC03");
            }
            else if (item == "FX is off") {
                this.changeItem("Options", "FX is off", "FX is on");
                g_App.getSound().PlayWAV("MISC03");
            }
            else if (item == "Music is on") {
                this.changeItem("Options", "Music is on", "Music is off");
                g_App.getSound().PlayWAV("MISC03");
            }
            else if (item == "Music is off") {
                this.changeItem("Options", "Music is off", "Music is on");
                g_App.getSound().PlayWAV("MISC03");
            }
            else if (item == "Back") {
                this.setMenu("Main Menu");
                g_App.getSound().PlayWAV("MENU02");
            }
        }
    }
}
;
//# sourceMappingURL=data:application/json;base64,